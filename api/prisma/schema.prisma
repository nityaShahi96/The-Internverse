
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  token     Token[]
  employer  Employer[]  
  student   Student[]   
}

model Employer {
  id        Int    @id @default(autoincrement())
  name  String
  user      User   @relation(fields: [userId], references: [id])
  userId    Int    @unique
}


model Student {
  id           Int      @id @default(autoincrement())
  userId       Int
  firstName    String
  lastName     String
  user         User     @relation(fields: [userId], references: [id])
  designation  String?
  aboutYourself String?
  address      Address?  @relation(fields: [addressId], references: [id])
  addressId    Int?
  education    Education? @relation(fields: [educationId], references: [id])
  educationId  Int?
  skills       String?
  training     Training? @relation(fields: [trainingId], references: [id])
  trainingId   Int?
  experience   Experience? @relation(fields: [experienceId], references: [id])
  experienceId Int?
}

model Address {
  id               Int      @id @default(autoincrement())
  address          String?
  province         String?
  city             String?
  zipCode          String?
  permanentAddress String?
  students         Student[]
}

model Education {
  id                  Int      @id @default(autoincrement())
  universityName      String?
  degree              String?
  universityCity      String?
  universityStartDate DateTime?
  universityEndDate   DateTime?
  universityStatus    String?
  students            Student[]
}

model Training {
  id                    Int      @id @default(autoincrement())
  trainingCertificates  String?
  trainingCompletionDate DateTime?
  trainingDescription   String?
  students              Student[]
}

model Experience {
  id                    Int      @id @default(autoincrement())
  experienceDesignation String?
  experienceCompany     String?
  experienceStartDate   DateTime?
  experienceEndDate     DateTime?
  experienceDescription String?
  students              Student[]
}

model Token {
  id      Int    @id @default(autoincrement())
  token   String @unique
  user    User   @relation(fields: [userId], references: [id])
  userId  Int
}
